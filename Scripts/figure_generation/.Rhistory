data_path = '~/Dropbox (Princeton)/Data + Experiments Tim Sudijono/LimitShapeCodeDemo/cleaned_real_data/Tarsius/'
file_paths = list.files(path = data_path,full.names = TRUE)
file_names = list.files(path = data_path,full.names = FALSE)
functions_to_summarize = 10
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
cuts = cut(rate_values,100,labels = FALSE)
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
mfrow3d(1,3)
functions_to_summarize = 10
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = mean)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,100,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,100,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
functions_to_summarize = 5
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,100,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,100,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
rotation_matrix=matrix(c(0.8065218,0.5911149,0.01028626,0,0.5583186,-0.7558216,0.34207344,0,0.1944301,-0.2816325,-0.93961692,0,0,0,0,1),ncol=4,byrow=TRUE)
rotation_matrix=matrix(c(0.8065218,0.5911149,0.01028626,0,0.5583186,-0.7558216,0.34207344,0,0.1944301,-0.2816325,-0.93961692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,100,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
cuts = cut(rate_values,1000,labels = FALSE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,1000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
functions_to_summarize = 10
rotation_matrix=matrix(c(0.8065218,0.5911149,0.01028626,0,0.5583186,-0.7558216,0.34207344,0,0.1944301,-0.2816325,-0.93961692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,1000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
userMatrix<-par3d()$userMatrix
userMatrix
as.vector(userMatrix)
rotation_matrix=matrix(c(0.82251388,0.56811149,0.02528626,0,0.5663186,-0.8158216,-0.1217,0,-0.0282301,0.1136325,-0.93961692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,1000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
userMatrix<-par3d()$userMatrix
userMatrix
as.vector(userMatrix)
rotation_matrix=matrix(c(0.81651388,0.54611149,0.17928626,0,0.5763186,-0.7958216,-0.1917,0,0.0282301,0.2336325,-0.91861692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,1000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
userMatrix<-par3d()$userMatrix
userMatrix
matrix(c(0.81651388,0.54611149,0.17928626,0,0.5763186,-0.7958216,-0.1917,0,0.0282301,0.2336325,-0.91861692,0,0,0,0,1),ncol=4,byrow=TRUE)
rotation_matrix=matrix(c(0.77051388,0.59711149,-0.15828626,0,0.6163186,-0.7858216,-0.0117,0,-0.1582301,-0.1236325,-0.94861692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,1000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,1500,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
rotation_matrix=matrix(c(0.77051388,0.59711149,-0.15828626,0,0.6163186,-0.7858216,-0.0117,0,-0.1582301,-0.1236325,-0.94861692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,2000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
functions_to_summarize = 20
rotation_matrix=matrix(c(0.77051388,0.59711149,-0.15828626,0,0.6163186,-0.7858216,-0.0117,0,-0.1582301,-0.1236325,-0.94861692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,2000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
functions_to_summarize = 15
rotation_matrix=matrix(c(0.77051388,0.59711149,-0.15828626,0,0.6163186,-0.7858216,-0.0117,0,-0.1582301,-0.1236325,-0.94861692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,2000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
functions_to_summarize = 10
rotation_matrix=matrix(c(0.77051388,0.59711149,-0.15828626,0,0.6163186,-0.7858216,-0.0117,0,-0.1582301,-0.1236325,-0.94861692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,3)
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
indices[11]
mfrow3d(1,4)
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
vertex_index = indices[11]
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 100)
colors = rep('white', dim(mesh2$vb)[2])
colors[closest_vertices] = 'red'
plot3d(mesh2,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,2000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
mfrow3d(1,4)
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
vertex_index = indices[11]
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 50)
colors = rep('white', dim(mesh2$vb)[2])
colors[closest_vertices] = 'red'
plot3d(mesh2,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
plot3d(mesh2,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 10)
colors = rep('white', dim(mesh2$vb)[2])
colors[closest_vertices] = 'red'
plot3d(mesh2,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
#### Raeding in Limit Shapes info ####
data_path = '~/Dropbox (Princeton)/Data + Experiments Tim Sudijono/LimitShapeCodeDemo/cleaned_real_data/Tarsius/'
file_paths = list.files(path = data_path,full.names = TRUE)
file_names = list.files(path = data_path,full.names = FALSE)
functions_to_summarize = 10
rotation_matrix=matrix(c(0.77051388,0.59711149,-0.15828626,0,0.6163186,-0.7858216,-0.0117,0,-0.1582301,-0.1236325,-0.94861692,0,0,0,0,1),ncol=4,byrow=TRUE)
mfrow3d(1,4)
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
vertex_index = indices[11]
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 10)
colors = rep('white', dim(mesh2$vb)[2])
colors[closest_vertices] = 'red'
plot3d(mesh2,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
mfrow3d(1,4)
mfrow3d(1,3)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,2000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
mfrow3d(1,3)
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
vertex_index = indices[11]
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 10)
colors = rep('white', dim(mesh2$vb)[2])
colors[closest_vertices] = 'red'
plot3d(mesh,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
mfrow3d(1,3)
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
vertex_index = indices[12]
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 10)
colors = rep('white', dim(mesh2$vb)[2])
colors[closest_vertices] = 'red'
plot3d(mesh,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
mfrow3d(1,3)
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
vertex_index = indices[11]
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 100)
colors = rep('white', dim(mesh$vb)[2])
colors[closest_vertices] = 'red'
plot3d(mesh,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
mfrow3d(1,3)
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
indices = c(261,295,833,224,939,278,252,593,177,357,4845,4215,4619,162,244,4618,4225,31,4705,4524,219,4301,4898,262,4860,69,64,4478,4452,4224,102,179,4176)
vertex_index = indices[11]
closest_vertices = knnx.index(query = matrix(t(mesh$vb[-4,vertex_index]),ncol = 3), data = t(mesh$vb[-4,]), k = 100)
colors = rep('white', dim(mesh$vb)[2])
#colors[closest_vertices] = 'red'
#plot3d(mesh,col = colors,  specular="black", axes = FALSE,xlab = '',ylab = '',zlab='')
#rgl.viewpoint(userMatrix = rotation_matrix)
for (comparison in c('Saimiri','Mirza','Microcebus')){
i = 11
mesh = vcgImport(file_paths[i])
cols = rep('white',dim(mesh$vb)[2])
#  cols[261] = 'red'
#  plot3d(mesh, col = cols)
weight_path = paste('~/Dropbox (Princeton)/SINATRA_Data/real_data_comparisons/Tarsius_',comparison,'/map_',file_names[i],'.csv',sep = '')
g = read.csv(weight_path, header = FALSE)
g = g[,1:functions_to_summarize]
g = apply(g, MARGIN = 2, FUN = scale_and_normalize)
rate_values = apply(g, MARGIN = 1, FUN = max)
color1='blue'
color2='lightgreen'
color3='red'
col_pal=c(color1,color1,color2,color2,color2,color3)
colfunc <- colorRampPalette(col_pal)
cuts = cut(rate_values,2000,labels = FALSE)
heat_colors=colfunc(max(cuts) - min(cuts))[cuts - min(cuts)]
plot3d(mesh,col = heat_colors,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
}
mfrow3d(1,3)
plot3d(mesh2,col = mesh2_colors_heat,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
plot3d(mesh2,col = mesh4_2_colors_heat,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
plot3d(mesh2,col = mesh5_2_colors_heat,specular="black", axes = FALSE,  xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
rotation_matrix=matrix(c(0.919328629970551,0.389629483222961,0.0549933537840843,0,0.390242397785187,-0.920712232589722,-0.000437354668974876,0,0.0504627674818039,0.0218627471476793,-0.998486816883087,0,0,0,0,1), ncol = 4, byrow = TRUE)
mfrow3d(1,3)
plot3d(mesh2,col = mesh2_colors_heat,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
plot3d(mesh2,col = mesh4_2_colors_heat,  specular="black", axes = FALSE, xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
plot3d(mesh2,col = mesh5_2_colors_heat,specular="black", axes = FALSE,  xlab = '',ylab = '',zlab='')
rgl.viewpoint(userMatrix = rotation_matrix)
